        expected_data[1] = 32'h7;
        expected_addr[1] = 32'h50;

        expected_data[2] = 32'h7;
        expected_addr[2] = 32'h54;

Memory write 1 successful : wrote 00000007 to address 00000050
Memory write 2 successful : wrote 00000007 to address 00000054

instr  	     pc		  
20020005     8
2003000c     8
2067fff7     8
00e22025     0
00642824     0
00a42820     0
10a7000a     4
0064202a     0
10800001     4
20050000     
00e2202a     0
00853820     0
00e23822     0
ac670044     2b
8c020050     23
08000011     2
20020001     
ac020054     2b



bits	5  4  3  2  1  0  4  3  2  1  0  4  3  2  1  0
opcode	31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
LW	1  0  0	 0  1  1   [ rs       ]  [ rt        ]  [address/immediate                   ]  I format
SW	1  0  1	 0  1  1   [ rs       ]  [ rt        ]  [address/immediate                   ]  I format
BEQ	0  0  0	 1  0  0   [ rs       ]  [ rt        ]  [address/immediate                   ]  I format
J	0  0  0	 0  1  0   [ immediate address                                               ]  J format
RTYPE	0  0  0	 0  0  0   [ rs       ]  [ rt        ]  [ rd        ]  [ shamt  ] [ funct    ]
  PERF                     [ rs       ]  [F                                     ] 0 0 0 0 0 0 
  ADD                                                                             1 0 0 0 0 0
  SUB                                                                             1 0 0 0 1 0
  AND                                                                             1 0 0 1 0 0
  OR                                                                              1 0 0 1 0 1
  SLT                                                                             1 0 1 0 1 0
  MULLADD									  1 0 0 0 0 1




ADD $24, $15, $14
opcode	31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
	0  0  0	 0  0  0 |0  1	1  1  1 |0  1  1  1  0 |1  1  0	 0  0 |0  0 0 0	0|1 0 0	0 0 0
	        R TYPE      $15             $14            $24             0       ADD
                            RS              RT             RD                      FUNC
                            

other example??
ADD $7, $4, $5
opcode	31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
	0  0  0	 0  0  0 |0  0	1  0  0 |0  0  1  0  1 |0  0  1	 1  1 |0  0 0 0	0|1 0 0	0 0 0
                            $4             $5              $7                         ADD



			    		   reg values	   
			    		            opcode		   $0  $1  $2  $3  $4  $5  $6  $7  $8  $9  $10		binary
sw  			    $2, 84($0)		    ac020054	           0       7   	   1   11				
add 	$3, $4, $5		    		                 	       	       12  1   11
sw  	$3, 88($0) //expval = 12 C @ addr88 h'58
and 	$1, $2, $3							       4   7   12  1   11
sw  	$1, 92($0) //expval = 4 @ addr92 h'5C
muladd  $3, $1, $2 //(4*7=28+12=40)					       4   7   40  1   11
sw	$3, 96($0) //expval = 40 h'28 @ addr96 h'60							  
perfmon $4, 0
perfmon $5, 1
sw	$4, 100($0) //idk the val lol
sw	$5, 104($0) //haha idk








temp test:
sw  			    $2, 84($0)		    ac020054	           0       7   	   1   11				
			    			opcode	31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
						RTYPE	0  0  0	 0  0  0 | [ rs       ]  [ rt        ]  [ rd        ]  [ shamt  ] [ funct    ]
						  PERF                   |F| 0  0  0  0  0  0  0  0  0  [ rd        ]  0  0  0  0 0 0 0 0 0 0 0     | hex instr
perfmon			    $3, 0 //cyc		        0  0  0  0  0  0 |0| 0  0  0  0  0  0  0  0  0 |0  0  0  1  1 |0  0  0  0 0 0 0 0 0 0 0     | 0000 1800 
sw			    $3, 88($0)                  1  0  1  0  1  1 |0  0  0  0  0 |0  0  0  1  1 |0  0  0  0  0 |0  0  0  0 1 0 1 1 0 0 0	    | ac03 0058
permon			    $3, 1 //pc                  0  0  0	 0  0  0 |1| 0	0  0  0	 0  0  0  0  0 |0  0  0	 1  1 |0  0  0	0 0 0 0	0 0 0 0	    | 0200 1800
sw			    $3, 92($0)			1  0  1	 0  1  1 |0  0	0  0  0	|0  0  0  1  1 |0  0  0	 0  0 |0  0  0  0 1 0 1 1 1 0 0	    | ac03 005c


00001800
ac030058
02001800
ac03005c
///////////////////////////////////////
MULADD SMALL TEST
			    		            opcode		   $0  $1  $2  $3  $4  $5  $6  $7  $8  $9  $10		binary
sw  			    $2, 84($0)		    ac020054	           0       7   	   1   11				
muladd			    $4, $2, $5 (7*11=77+1=78=h'4E)
			    rd, rs, rt
			    000000,00010,00101,00100,00000,100001 = 0000,0000,0100,0101,0010,0000,0010,0001 = 0045 2021
			    opcode, $2    $5     $4   shmt  func
sw			    $4, 88($0)
			    101011,00000,00100,0000000001011000   = 1010,1100,0000,0100,0000,0000,0101,1000 = ac04 0058
			    SW      $0    $4    88





ex
101011,00000,00010,0000000001010100 
SW      $0    $2    84


ADD $7, $4, $5
opcode	31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
	0  0  0	 0  0  0 |0  0	1  0  0 |0  0  1  0  1 |0  0  1	 1  1 |0  0 0 0	0|1 0 0	0 0 0
                            $4             $5              $7                         ADD




1010,1100,0000,0010,0000,0000,0101,0100 
ADD 




